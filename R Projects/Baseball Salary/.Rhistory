baseball <- read.csv('/users/alexandersedgwick/dropbox/ga/data/baseball.csv')
baseball <- read.csv('/users/alexandersedgwick/dropbox/development/ga/data/baseball.csv')
View(baseball)
names(baseball)
baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID','birthYear'),]
baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID','birthYear')]
baseball_mod <- baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID','birthYear')]
head(baseball_mod)
baseball_mod$Age <- baseball_mod$yearID - baseball_mod$birthYear
head(baseball_mod[-c('salary')])
head(baseball_mod[c('salary')])
head(baseball_mod[-c('salary')])
head(baseball_mod[!c('salary')])
head(baseball_mod[-6])
head(baseball_mod[-c(6,9,10)])
model_1 <- lm(baseball$salary ~ baseball_mod[-c(6,9,10)])
baseball_mod[-c(6,9,10)]
model_1 <- lm(baseball_mod$salary ~ baseball_mod[-c(6,9,10)])
baseball_mod[-c(6,9,10)]
head(baseball_mod[-c(6,9,10)])
model_1 <- lm(baseball_mod$salary ~ baseball_mod$HR + baseball_mod$RBI + baseball_mod$R + baseball_mod$G + baseball_mod$SB + baseball_mod$height + baseball_mod$weight + baseball_mod$Age)
model_1
summary(model_1)
library(leaps)
install.packages("leaps")
library(leaps)
attach(baseball_mod)
names(baseball_mod)
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + Age,data=mydata,nbest=10)
# view results
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + Age,data=baseball_mod,nbest=10)
summary(leaps)
plot(leaps,scale="r2")
install.packages("car")
library(car)
subsets(leaps, statistic="rsq")
library(car)
subsets(leaps, statistic="rsq")
subsets(leaps, statistic="rsq")
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + Age,data=baseball_mod,nbest=10)
# view results
summary(leaps)
plot(leaps,scale="r2")
plot(leaps,scale="r2")
library(car)
subsets(leaps, statistic="rsq")
install.packages("relaimpo")
# Calculate Relative Importance for Each Predictor
library(relaimpo)
calc.relimp(fit,type=c("lmg","last","first","pratt"),
rela=TRUE)
baseball <- read.csv('/users/alexandersedgwick/dropbox/development/ga/data/baseball.csv')
baseball_mod <- baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID','birthYear')]
library(leaps)
attach(baseball_mod)
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + Age,data=baseball_mod,nbest=10)
summary(leaps)
plot(leaps,scale="r2")
library(car)
subsets(leaps, statistic="rsq")
leaps
subsets(leaps, statistic="rsq")
plot(leaps,scale="r2")
baseball <- read.csv('/users/alexandersedgwick/dropbox/development/ga/data/baseball.csv')
baseball_mod <- baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID','birthYear')]
head(baseball_mod)
baseball_mod$Age <- baseball_mod$yearID - baseball_mod$birthYear
baseball_mod <- baseball_mod[complete.cases(baseball_mod),]
model_1 <- lm(baseball_mod$salary ~ baseball_mod$HR + baseball_mod$RBI + baseball_mod$R + baseball_mod$G + baseball_mod$SB + baseball_mod$height + baseball_mod$weight + baseball_mod$Age)
#Using Leaps - http://www.statmethods.net/stats/regression.html
# All Subsets Regression
library(leaps)
attach(baseball_mod)
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + Age,data=baseball_mod,nbest=10)
# view results
summary(leaps)
# plot a table of models showing variables in each model.
# models are ordered by the selection statistic.
plot(leaps,scale="r2")
# plot statistic by subset size
model_1 <- lm(salary~HR + RBI + R + G + SB + height + weight + Age)
library(relaimpo)
calc.relimp(model_1,type=c("lmg","last","first","pratt"),
rela=TRUE)
# Bootstrap Measures of Relative Importance (1000 samples)
boot <- boot.relimp(model_1, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
booteval.relimp(boot) # print result
plot(booteval.relimp(boot,sort=TRUE)) # plot result
names(baseball_mod)
cov(baseball_mod)
cor(baseball_mod)
View(baseball)
names(baseball)
install.packages("cluster")
library(cluster)
data(xclara)
plot(xclara) # 3000 observations; a bit large for dissimilarity plotting
km <- kmeans(xclara,3)
## Now the silhouette concept builds on dissimilarities
## e.g.
dissE <- daisy(xclara) #-> large (!)  3000 x 3000 / 2
sk <- silhouette(km$cl, dissE)
plot(sk)
## but kmeans is rather equivalent to work with  {D_ij}^2,
## hence this better corresponds:
dE2 <- dissE^2
sk2 <- silhouette(km$cl, dE2)
plot(sk2)
baseball <- read.csv('/users/alexandersedgwick/dropbox/development/ga/data/baseball.csv')
baseball_mod <- baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID','birthYear')]
head(baseball_mod)
baseball_mod$Age <- baseball_mod$yearID - baseball_mod$birthYear
baseball_mod <- baseball_mod[complete.cases(baseball_mod),]
model_1 <- lm(salary~HR + RBI + R + G + SB + height + weight + Age)
cov(baseball_mod)
cor(baseball_mod)
#Using Leaps - http://www.statmethods.net/stats/regression.html
# All Subsets Regression
library(leaps)
attach(baseball_mod)
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + Age,data=baseball_mod,nbest=10)
# view results
summary(leaps)
# plot a table of models showing variables in each model.
# models are ordered by the selection statistic.
plot(leaps,scale="r2")
# plot statistic by subset size
library(car)
subsets(leaps, statistic="rsq")
# Calculate Relative Importance for Each Predictor
library(relaimpo)
calc.relimp(model_1,type=c("lmg","last","first","pratt"),
rela=TRUE)
# Bootstrap Measures of Relative Importance (1000 samples)
boot <- boot.relimp(model_1, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
booteval.relimp(boot) # print result
plot(booteval.relimp(boot,sort=TRUE)) # plot result
baseball <- read.csv('/users/alexandersedgwick/dropbox/development/ga/data/baseball.csv')
baseball_mod <- baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID')]
baseball <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball.csv')
baseball_mod <- baseball[c('HR', 'RBI', 'R', 'G', 'SB', 'salary', 'height', 'weight', 'yearID')]
baseball_mod <- baseball_mod[complete.cases(baseball_mod),]
model_1 <- lm(salary~HR + RBI + R + G + SB + height + weight + yearID)
HR
attach(baseball_mod)
model_1 <- lm(salary~HR + RBI + R + G + SB + height + weight + yearID)
library(leaps)
attach(baseball_mod)
leaps<-regsubsets(salary~HR + RBI + R + G + SB + height + weight + yearID,data=baseball_mod,nbest=10)
# view results
summary(leaps)
# plot a table of models showing variables in each model.
# models are ordered by the selection statistic.
plot(leaps,scale="r2")
# plot statistic by subset size
library(car)
subsets(leaps, statistic="rsq")
# Calculate Relative Importance for Each Predictor
library(relaimpo)
calc.relimp(model_1,type=c("lmg","last","first","pratt"),
rela=TRUE)
# Bootstrap Measures of Relative Importance (1000 samples)
boot <- boot.relimp(model_1, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
booteval.relimp(boot) # print result
plot(booteval.relimp(boot,sort=TRUE)) # plot result
head(baseball)
b2011 = read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 = read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
head(b2011)
b2011['salary']
b2011[-c('salary')]
b2011[-('salary')]
train_X <- b2011[colnames!='salary']
subset(b2011, select=-c(salary))
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
library(randomForest)
install.packages("randomforest")
install.packages("randomForest")
library(randomForest)
b2011 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
randomForest(x=train_X, y=train_y,ntree=500, nodesize=2)
train_X
train_y
len(train_X)
length(train_X)
train_X
train_y
randomForest(train_y ~ train_X,ntree=500, nodesize=2)
class(train_y)
to_list(train_y)
b2011 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
test_X = b2012[c('G', 'AB', 'R', 'H', 'X2B', 'X3B', 'HR', 'RBI', 'SB', 'CS', 'BB', 'SO', 'IBB', 'HBP', 'SH', 'SF')]
b2012_csv = b2012[c('playerID','yearID','salary')]
b2011 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
test_X = b2012[c('G', 'AB', 'R', 'H', 'X2B', 'X3B', 'HR', 'RBI', 'SB', 'CS', 'BB', 'SO', 'IBB', 'HBP', 'SH', 'SF')]
b2012_csv = b2012[c('playerID','yearID','salary')]
fit = lm(salary ~ G+ AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
MSE = (summary(fit)$sigma)^2
MSE
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(fit)
# Stepwise Regression
library(MASS)
step <- stepAIC(fit, direction="both")
step$anova # display results
library(leaps)
#ttach(mydata)
leaps<-regsubsets(salary ~ G+ AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,data=b2011,nbest=10)
# view results
summary(leaps)
# plot a table of models showing variables in each model.
# models are ordered by the selection statistic.
plot(leaps,scale="r2")
plot(leaps)
# plot statistic by subset size
library(car)
subsets(leaps, statistic="rsq")
fit = lm(salary ~ G+ AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,b2011)
fit2 = lm(salary ~ G + AB + R + H + X2B + X3B + RBI + CS + SO + IBB,b2011)
summary(fit)
summary(fit2)
library(relaimpo)
calc.relimp(fit,type=c("lmg","last","first"),
rela=TRUE)
fit <- lm(salary ~ birthCountry + weight + height + bats + throws + teamID + G + G_batting + AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF ,b2011)
library(MASS)
step <- stepAIC(fit, direction="both")
step$anova # display results
log(b2011$salary)
b2011$log_salary <- log(b2011$salary)
b2011$log_salary <- log(b2011$salary)
rm <- randomForest(log_salary ~ birthCountry + weight + height + bats + throws + teamID + G + G_batting + AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,ntree=500, nodesize=2)
rm <- randomForest(log_salary ~ birthCountry + weight + height + bats + throws + teamID + G + G_batting + AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF, data = b2011,ntree=500, nodesize=2)
rm
plot(rm)
plot(rm)
plot(2)
plot.new()
fit <- lm(log_salary ~ birthCountry + weight + height + bats + throws + teamID + G + G_batting + AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF ,b2011)
fit
summary(fit)
ddply(b2011$salary,.(b2011$teamID), summarize, tot_summary=sum(salary))
library(plyr)
ddply(b2011$salary,.(b2011$teamID), summarize, tot_summary=sum(salary))
b2011$teamID
b2011$salary
ddply(b2011$salary,.(b2011$teamID), summarize, tot_summary=sum(salary))
ddply(b2011$salary,.(teamID), summarize, tot_summary=sum(salary))
ddply(b2011$salary,.(), summarize, tot_summary=sum(salary))
ddply(b2011,.(b2011$teamID), summarize, tot_summary=sum(salary))
teams <- ddply(b2011,.(b2011$teamID), summarize, tot_summary=sum(salary))
teams
teams[order(tot_summary),]
teams[order(teams$tot_summary),]
teams[order(-teams$tot_summary),]
teams <- ddply(b2011,.(b2011$teamID), summarize, tot_salary=sum(salary))
rm <- randomForest(log_salary ~ birthCountry + weight + height + bats + throws + teamID + G + G_batting + AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF, data = b2011,ntree=500, nodesize=2)
teams[order(-teams$tot_salary),]
summary(teams$tot_salary)
b2011 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
test_X = b2012[c('G', 'AB', 'R', 'H', 'X2B', 'X3B', 'HR', 'RBI', 'SB', 'CS', 'BB', 'SO', 'IBB', 'HBP', 'SH', 'SF')]
b2012_csv = b2012[c('playerID','yearID','salary')]
b2011 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
test_X = b2012[c('G', 'AB', 'R', 'H', 'X2B', 'X3B', 'HR', 'RBI', 'SB', 'CS', 'BB', 'SO', 'IBB', 'HBP', 'SH', 'SF')]
b2012_csv = b2012[c('playerID','yearID','salary')]
fit = lm(salary ~ G+ AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
MSE = (summary(fit)$sigma)^2
MSE
fit = lm(salary ~ G+ AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
MSE = (summary(fit)$sigma)^2
summary(fit)
anova(fit)
salary ~ G + AB + R + H + X2B + X3B + RBI + CS + SO + IBB
fit = lm(salary ~ G+ AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF,b2011)
fit2 = lm(salary ~ G + AB + R + H + X2B + X3B + RBI + CS + SO + IBB,b2011)
summary(fit)
summary(fit2)
anova(fit)
anova(fit)[["Mean Sq"]]
fit <- lm(salary ~ weight + height + teamID + G + AB + R + H + X2B + X3B + HR + RBI + CS + SO + IBB,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
names(train_X)
b2011 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_training_2011.csv')
b2012 <- read.csv('/users/alexandersedgwick/dropbox/development/ga/Ongoing Projects/baseball/baseball_test_2012.csv')
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
test_X = b2012[c('G', 'AB', 'R', 'H', 'X2B', 'X3B', 'HR', 'RBI', 'SB', 'CS', 'BB', 'SO', 'IBB', 'HBP', 'SH', 'SF')]
b2012_csv = b2012[c('playerID','yearID','salary')]
b2011$log_salary <- log(b2011$salary)
fit <- lm(log_salary ~ birthCountry + weight + height + bats + throws + teamID + G + G_batting + AB + R + H + X2B + X3B + HR + RBI + SB + CS + BB + SO + IBB + HBP + SH + SF ,b2011)
library(MASS)
step <- stepAIC(fit, direction="both")
step$anova # display results
fit <- lm(salary ~ weight + height + teamID + G + AB + R + H + X3B + RBI + CS + +BB + SO,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
names(test_X)
fit.predict(test_X)
predict(fit, test_X)
train_X
names(train_X)
train_X <- subset(b2012, select=-c(salary))
b2012_csv = b2012[c('playerID','yearID','salary')]
predict(fit, test_X)
test_X <- subset(b2012, select=-c(salary))
b2012_csv = b2012[c('playerID','yearID','salary')]
train_X <- subset(b2011, select=-c(salary))
train_y <- b2011['salary']
predict(fit, test_X)
fit <- lm(salary ~ weight + height + teamID + G + AB + R + H + X3B + RBI + CS + +BB + SO,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
predict(fit, test_X)
fit <- lm(salary ~ weight + height  + G + AB + R + H + X3B + RBI + CS + +BB + SO,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
fit.predict(test_X)
fit <- lm(salary ~ weight + height  + G + AB + R + H + X3B + RBI + CS + +BB + SO,b2011)
summary(fit)
anova(fit)
anova(fit)[["Mean Sq"]]
fit(predict,test_X)
predict(fit,test_X)
b2012_csv$predicted <- predict(fit,test_X)
names(b2012)
names(b2012_csv)
gc()
